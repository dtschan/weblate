#!/usr/bin/env python

# Copyright (C) 2016 Daniel Tschan
#

import os
import sys
import ruamel.yaml
from ruamel.yaml.scalarstring import PreservedScalarString

def remove_prefix(text, prefix):
    if text.startswith(prefix):
        return text[len(prefix):]
    return text

def merge(a, b, path=None):
    "merges b into a"
    if path is None:
        path = []
    for key in b:
        if key in a:
            if isinstance(a[key], dict) and isinstance(b[key], dict):
                merge(a[key], b[key], path + [str(key)])
            elif a[key] == b[key]:
                pass # same leaf value
            else:
                a[key] = PreservedScalarString(b[key])
        else:
            a[key] = PreservedScalarString(b[key])
    return a

with os.popen('git show :' + remove_prefix(sys.argv[1], os.environ['WL_PATH'] + "/")) as f:
    cur = ruamel.yaml.load(f, ruamel.yaml.RoundTripLoader, preserve_quotes=True)

with open(sys.argv[1], 'r') as f:
    new = ruamel.yaml.load(f, ruamel.yaml.RoundTripLoader)

merge(cur, new)

with open(sys.argv[1], 'w') as f:
    ruamel.yaml.dump(cur, f, Dumper=ruamel.yaml.RoundTripDumper, \
        width=float("inf"), allow_unicode=True, explicit_start=True)
